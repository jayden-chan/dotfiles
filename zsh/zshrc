# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export EDITOR=nvim

# Set color scheme from wal
(cat ~/.cache/wal/sequences &)

ZSH_THEME="jayden-chan"
DEFAULT_USER="jayden"
prompt_context() {}
plugins=(git dotenv)

source $ZSH/oh-my-zsh.sh

# User configuration

stty stop undef
stty start undef

# Enable extended file globs
setopt extendedglob

# Git alias
alias gdf='cd $HOME/Documents/Git/dotfiles && git status'
alias gpf='cd $HOME/Documents/Git/programming-folder && git status'
alias gc='git commit -v -S'
alias gla='git pull --all'

# Compilation
alias javc='javac -Xlint:all'
alias javca='javac -Xlint:all *.java'
alias javcl='rm *.class'
alias lcm='latexmk -pvc -pdf'
alias gr='./gradlew'
alias god='cd ~/Dev/Go/src/github.com/jayden-chan/'
alias mb='make build'
alias hh='git push heroku master && heroku logs --tail'

# dotfile editing
alias vimrc='vim $HOME/Documents/Git/dotfiles/vim/vimrc'
alias zshrc='vim $HOME/Documents/Git/dotfiles/zsh/zshrc'
alias dot='vim $HOME/Documents/Git/dotfiles/'
alias dotu='cd $HOME/Documents/Git/dotfiles && gst'

# Info
alias nfetch='neofetch --ascii_distro arch_old'

# Wifi
alias wifilist='nmcli dev wifi list'
alias wificonnect='nmcli con up'

# Exit
alias :q='exit'
alias :Q='exit'
alias :wq='exit'
alias :Wq='exit'

# Editor
alias vim='nvim'
alias vimz='vim $(fzf)'

alias pdcli='node ~/Dev/Work/program-tools/packages/program-dev-cli/dist/index.js'

# U S E R   E R R O R
alias cim='vim'
alias vom='vim'
alias vun='vim'
alias dw='cd'
alias cs='cd'
alias clera='clear'
eval $(thefuck --alias)

# Other
alias rs='cd && clear'
alias l='ls -A'
alias sshd='ssh jayden@jaydendesktop.ddns.net'
alias lpackages='comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n '"'"'s/^Package: //p'"'"' | sort -u)'
alias comfy='vim $HOME/.vim/bundle/vim-comfy'

function wallpaper () {
    if [ $HOST = "grace" ]; then
        nitrogen --set-zoom-fill --save --head=0 $1
        nitrogen --set-zoom-fill --save --head=1 $1
        nitrogen --set-zoom-fill --save --head=2 $1
    else
        nitrogen --set-zoom-fill --save $1
    fi
    wal -i $1 -n --backend $2
}

function wallsolid () {
    local p="$HOME/Pictures/Wallpapers/Single Screen/Solid.png"
    convert -size 1920x1080 xc:$1 $p

    if [ $HOST = "grace" ]; then
        nitrogen --set-zoom-fill --save --head=0 $p
        nitrogen --set-zoom-fill --save --head=1 $p
        nitrogen --set-zoom-fill --save --head=2 $p
    else
        nitrogen --set-zoom-fill $p
    fi

    echo "{\"special\":{\"background\":\"#202020\",\"foreground\":\"#d5d5d5\",\"cursor\":\"#d5d5d5\"},\"colors\":{\"color0\":\"#000000\",\"color1\":\"$2\",\"color2\":\"#ffffff\",\"color3\":\"#ffffb6\",\"color4\":\"$1\",\"color5\":\"$2\",\"color6\":\"$1\",\"color7\":\"$2\",\"color8\":\"#6c6c66\",\"color9\":\"$2\",\"color10\":\"#ffffff\",\"color11\":\"#ffffb6\",\"color12\":\"$1\",\"color13\":\"$2\",\"color14\":\"$1\",\"color15\":\"#fdfbee\"}}" > $HOME/Documents/Git/dotfiles/alacritty/solid-theme.json

    wal -f $HOME/Documents/Git/dotfiles/alacritty/solid-theme.json
}

function github () {
    if [ "$1" = "" ]; then
        echo "You must specify a name"
    else
        touch README.md
        echo "# $1" > README.md
        touch LICENSE
    fi
}

function installfont () {
    sudo echo --- Installing font ---
    cp $1 $HOME/.local/share/fonts
    echo --- Refreshing font cache ---
    sudo fc-cache -fv
    echo --- Done ---
}

function lpac () {
    echo --- Native ---
    echo
    pacman -Qqettn
    echo
    echo --- AUR ---
    echo
    pacman -Qqettm
}

function preview() {
    for file in $(ls -A); do
        if [[ -f $file ]]; then
            echo "File: $(tput bold)$file$(tput sgr0)"
            head -5 $file
            echo
        elif [[ -d $file ]]; then
            echo "Folder: $(tput bold)$file$(tput sgr0)"
            echo
        fi
    done

    echo "Number of files: $(ls -A | wc -l)"
    echo "Number of unique files: $(ls -A | sort | uniq -u | wc -l)"
}

function pach () {
    cat /var/log/pacman.log | grep -iE 'installed|upgraded|removed' | tail -$1
}

function up_one_func {
    cd ..
    zle reset-prompt
}

function lsa_func {
    echo
    ls -A
    zle reset-prompt
}

function gst_func {
    echo
    git status
    zle reset-prompt
}

function clear_func {
    clear
    zle reset-prompt
}

zle -N up_one_widget up_one_func
bindkey '^E' up_one_widget

zle -N lsa_widget lsa_func
bindkey '^R' lsa_widget

zle -N gst_widget gst_func
bindkey '^G' gst_widget

zle -N clear_widget clear_func
bindkey "^W" clear_widget

# Export gradle path
export GOPATH=$HOME/Dev/Go
export PATH=$HOME/Dev/Go/bin:$PATH

# Make fzf respect .gitignore
export FZF_DEFAULT_COMMAND="rg --files"

# npm global packages config
export NPM_PATH="$HOME/.npm-global"
export PATH="$NPM_PATH/bin:$PATH"

# Add cargo binaries
export PATH="$HOME/.cargo/bin:$PATH"

unset MANPATH
export MANPATH="$NPM_PATH/share/man:$(manpath)"

if [ $HOST = "swift" ]; then
    export GOOGLE_APPLICATION_CREDENTIALS="/home/jayden/.keen-clone-12hi5v12ov51o21512-e4b433db3d6f.json"
fi

# Ensure GPG sign prompt shows on correct screen
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null

[[ $TMUX = "" ]] && export TERM="xterm-256color"
