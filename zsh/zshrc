# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export EDITOR=nvim

# ZSH_THEME="jayden-chan"
# ZSH_THEME="norm"
DEFAULT_USER="jayden"
# prompt_context() {}
plugins=(git dotenv zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# initialize z
[[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh

# initialize starship prompt
eval "$(starship init zsh)"

# User configuration

stty stop undef
stty start undef

# Enable extended file globs
setopt extendedglob

# Git alias
alias gdf='cd $HOME/Documents/Git/dotfiles && git status'
alias gc='git commit -v -S'
alias gcop='git checkout production'
alias gpuu='git push -u origin $(git symbolic-ref --short HEAD)'
# Stop activating ghostscript by accident
alias gs='git status'
alias ghostscript='/usr/bin/gs'

# Compilation
alias lcm='latexmk -pvc -pdf'
alias god='cd ~/Dev/Go/src/github.com/jayden-chan/'
alias mb='make build'
alias hh='git push heroku master && heroku logs --tail'

# dotfile editing
alias vimrc='vim $HOME/Documents/Git/dotfiles/vim/vimrc'
alias zshrc='vim $HOME/Documents/Git/dotfiles/zsh/zshrc'

# Info
alias nfetch='neofetch --ascii_distro arch_old'

# Wifi
alias wifilist='nmcli dev wifi list'
alias wificonnect='nmcli con up'

# Work
[[ "$HOST" = "jayden-GL63-8RC" ]] && source ~/.work-aliases.sh

# Exit
alias :q='exit'
alias :Q='exit'
alias :wq='exit'
alias :Wq='exit'

# Editor
alias vim='nvim'

# U S E R   E R R O R
alias cim='vim'
alias vom='vim'
alias vun='vim'
alias ivm='vim'
alias bim='vim'
alias dw='cd'
alias cs='cd'
alias clear='clear -x'
alias clera='clear'
alias celar='clear'
alias clare='clear'
alias claer='clear'
alias ckear='clear'
alias Lq='exit'

# Other
alias ls='exa'
alias l='exa -a'
alias y='yarn'
alias la='exa -lah'
alias lpackages='comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n '"'"'s/^Package: //p'"'"' | sort -u)'
alias open='feh --auto-zoom'
alias o='xdg-open'
alias clip='xclip -selection c'
alias x='xset r rate 270 35'
alias ta='tmux attach'
alias t='tmux'

function wallpaper () {
    if [ $HOST = "grace" ]; then
        nitrogen --set-zoom-fill --save --head=0 $1
        nitrogen --set-zoom-fill --save --head=1 $1
        nitrogen --set-zoom-fill --save --head=2 $1
    else
        nitrogen --set-zoom-fill --save $1
    fi
    wal -i $1 -n --backend $2
}

function wallsolid () {
    if [ "$1" = "--help" ]; then
        echo "Usage: wallsolid <background color> <accent color>"
        echo
        echo "Example: wallsolid 99dff7 ffffff"
        return
    fi

    local p="$HOME/Pictures/Wallpapers/Single Screen/Solid.png"
    convert -size 1920x1080 xc:\#$1 $p

    if [ $HOST = "grace" ]; then
        nitrogen --set-zoom-fill --save --head=0 $p
        nitrogen --set-zoom-fill --save --head=1 $p
        nitrogen --set-zoom-fill --save --head=2 $p
    else
        nitrogen --set-zoom-fill $p
    fi

    # Gruvbox dark hard contrast
    echo "{\"special\":{\"background\":\"#1d2021\",\"foreground\":\"#ebdbb2\",\"cursor\":\"#d5d5d5\"},\"colors\":{\"color0\":\"#282828\",\"color1\":\"#cc241d\",\"color2\":\"#98971a\",\"color3\":\"#d79921\",\"color4\":\"#458588\",\"color5\":\"#b16286\",\"color6\":\"#689d6a\",\"color7\":\"#a89984\",\"color8\":\"#928374\",\"color9\":\"#fb4934\",\"color10\":\"#b8bb26\",\"color11\":\"#fabd2f\",\"color12\":\"#83a598\",\"color13\":\"#d3869b\",\"color14\":\"#8ec07c\",\"color15\":\"#ebdbb2\"}}" > $HOME/Documents/Git/dotfiles/termite/solid-theme.json

    wal -f $HOME/Documents/Git/dotfiles/termite/solid-theme.json
}

function installfont () {
    sudo echo --- Installing font ---
    cp $1 $HOME/.local/share/fonts
    echo --- Refreshing font cache ---
    sudo fc-cache -fv
    echo --- Done ---
}

function wifireset () {
    nmcli con down "$1" && wificonnect "$1"
}

function lpac () {
    echo --- Native ---
    echo
    pacman -Qqettn
    echo
    echo --- AUR ---
    echo
    pacman -Qqettm
}

function cargo_init() {
    if [ "$1" = "" ]; then
        echo "You must specify a project name"
    else
        cargo init $1
        cd $1
        touch README.md
        echo "# $1" > README.md

        if [ "$2" != "" ]; then
            echo "\n$2" >> README.md
        fi

        touch Makefile
        echo "build: build-skylake\n" >> Makefile
        echo "build-general:\n\tcargo build --release\n" >> Makefile
        echo "build-skylake:\n\tRUSTFLAGS=\"-Ctarget-cpu-skylake\" cargo build --release\n" >> Makefile
        echo ".PHONY: build build-general build-skylake" >> Makefile

        touch rustfmt.toml
        echo "max_width = 80" > rustfmt.toml

        touch LICENSE

        echo "Project creation finished, don't forget to add a license"
    fi
}

function ts_init() {
    if [ "$1" = "" ]; then
        echo "You must specify a project name"
    else
        mkdir $1
        cd $1
        git status >/dev/null 2>&1 || { git init }
        npm init
        mkdir src

        echo "# $1" > README.md
        echo "function main() {\n  console.log(\"Hello world\");\n}\n\nmain();" > src/index.ts
        echo "dist\nnode_modules\n*.swp\n*.env" > .gitignore
        echo '{
  "include": ["src/**/*.ts", "src/**/*.js", "src/**/*.json"],
  "compilerOptions": {
    "resolveJsonModule": true,
    "outDir": "dist",
    "module": "commonjs",
    "target": "ES6",
    "inlineSourceMap": true,
    "strict": true
  }
}' > tsconfig.json

        npm i -D typescript @types/node

        if [ "$2" != "" ]; then
            echo "\n$2" >> README.md
        fi

        echo "Project created, don't forget to update package.json"
    fi

}

# try not to exit the terminal with un-pushed git commits
function exit () {
    gitlog=$(git log @{upstream}.. 2>/dev/null)
    if [[ $? -ne 0 ]]; then builtin exit; fi
    if [[ $(printf '%s' "$gitlog" | wc -c) -ne 0 ]]; then
        echo "Oops! You forgot to push your commits to the upstream repo."
        echo -n "Would you like to push them before exiting? [Y/n] "
        read answer

        if [ "$answer" != "${answer#[Yy]}" ]; then
            git push || return -1
        fi
    fi
    builtin exit
}

function e () {
    PACKAGE=ps-$1 make TARGET=X64 $2
}

function pach () {
    cat /var/log/pacman.log | grep -iE 'installed|upgraded|removed' | tail -$1
}

function gst_func {
    echo
    git status
    zle reset-prompt
}

zle -N gst_widget gst_func
bindkey '^G' gst_widget

bindkey '^H' backward-kill-word

export DO_NOT_TRACK=1
# Opt out of .NET telemetry (yikes...)
export DOTNET_CLI_TELEMETRY_OPTOUT=1
export GATSBY_TELEMETRY_DISABLED=1

# Export Go path
export GOPATH=$HOME/Dev/Go
export PATH=$HOME/Dev/Go/bin:$PATH

# Make fzf respect .gitignore
export FZF_DEFAULT_COMMAND="rg --files"

# Add cargo binaries
export PATH="$HOME/.cargo/bin:$PATH"

# Add other binaries
export PATH="$HOME/.local/bin:$PATH"

# NPM global
export PATH=~/.npm-global/bin:$PATH

unset MANPATH
export MANPATH="$NPM_PATH/share/man:$(manpath)"

# Ensure GPG sign prompt shows on correct screen
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null

# Android studio stuff for React Native
export ANDROID_HOME=$HOME/Dev/Android
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# Termite open window in new tab
if [[ $TERM == xterm-termite ]]; then
  . /etc/profile.d/vte.sh
  __vte_osc7
fi
